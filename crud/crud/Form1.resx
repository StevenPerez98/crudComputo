<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>